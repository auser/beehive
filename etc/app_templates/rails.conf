# Config file
# This is a default configuration file
# If you do not specify an action, the action here will be run
# This is a comment
bundle: do
  #!/bin/bash
  EXIT_CODE=`git clone --depth 0 $REPOS $WORKING_DIRECTORY`
  if [ "$EXIT_CODE" -ne 0 ]; then exit $EXIT_CODE; fi

  cd $WORKING_DIRECTORY

  SHA=`git rev-parse --verify HEAD`
  FILE=$SQUASHED_DIRECTORY/$NAME-$SHA.tgz
  

  mkdir .gem
  export GEM_HOME=$WORKING_DIRECTORY/.gem

  # If there is an isolate file, run Isolate.now!
  if [ -f "$WORKING_DIRECTORY/Isolate" ]; then
    ruby -rubygems -e "require 'isolate'; Isolate.now!"
  fi
  
  # If bundler is used
  if [ -f "$WORKING_DIRECTORY/Gemfile" ]; then
    bundle install
  fi
  
  # If .gems file exists
  if [ -f "$WORKING_DIRECTORY/.gems" ]; then
    while read line; do
      if [ ! -z "$line" ]; then
        gem install --no-rdoc --no-ri $line
      fi
    done < "$WORKING_DIRECTORY/.gems"
  fi
  
  cd $SQUASHED_DIRECTORY
  tar -C $WORKING_DIRECTORY -czf $FILE .
  ln -sf $FILE $SQUASHED_FILE
  # This is important to extract the sha
  echo "{sha, \"$SHA\"}." > $ENV_FILE
end


bundle.after: do
  if [ -d "$WORKING_DIRECTORY" ]; then
    rm -rf $WORKING_DIRECTORY
  fi
end


mount: do
  tar -C $TARGET_DIRECTORY -zxf $BEE_IMAGE
end


start: do
  #!/bin/bash -x
  export GEM_HOME=$WORKING_DIRECTORY/.gems

  thin -P$RUN_DIR/tmp/pids/$NAME-$PORT.pid -d -l $LOG_DIRECTORY/$NAME.log -p $PORT start
end
stop:
unmount:
cleanup:
